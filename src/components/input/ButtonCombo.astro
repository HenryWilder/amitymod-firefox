---
import type { InputProps } from "@/typescript/input";
import Button from "./Button.astro";

interface Item {
    kind: "primary" | "secondary";
    content: any;
}

interface Props extends InputProps {
    /**
     * `static` - Primary vs secondary is not affected by clicking.
     *
     * `single` - Buttons pass around a single primary state like radios when clicked.
     * Only the first instance of "primary" in `items` is respected.
     *
     * `multi` - Buttons toggle between primary and secondary like checkboxes when clicked.
     */
    kind: "static" | "single" | "multi";

    /**
     * Collection of button-definitions.
     */
    items: Item[];
}

const { id, label, kind = "static", items } = Astro.props;
---
<span class="button-combo" data-kind={kind} id={id}>
    {label !== undefined && (<strong>{label}</strong>)}
    {items.map((item: Item) => (<Button kind={item.kind}>{item.content}</Button>))}
</span>

<script type="module" src="/scripts/button-combo.js" defer></script>
